{"title": "More explanations are needed", "review": "This paper presents a way use using FSA-augmented MDPs to perform AND and OR of learned policies. This idea is motivated by the desirability of compositional policies. I find the idea compelling, but I am not sure the proposed method is a useful solution. Overall, the description of the method is difficult to follow. With more explanations (perhaps an algorithm box?), I would consider increasing my score.\n\nThe experiments demonstrate that this method can outperform SQL at skill composition. However, it is unclear how much prior knowledge is used to define the automaton. If prior knowledge is used to construct the FSA, then a missing comparison would be to first find the optimal path through the FSA and then optimize a controller to accomplish it. As the paper is not very clear, that might be the method in the paper. \n\nQuestions:\n- How do you obtain the number of automaton states? \n- In Figure 1, are the state transitions learned or handcoded? Are they part of the policy's action space?\n- In section 3.2, you state  s_{t:t+k} |= f(s)<c \u21d4 f(s_t)<c    What does s without a timestep subscript refer to? Why does this statement hold?\n\nCan you specify more clearly what you assume known in the experiments? What is learned in the automata? In Figure 5, does SQL have access to the same information as Automata Guided Composition?", "rating": "5: Marginally below acceptance threshold", "confidence": "2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper"}