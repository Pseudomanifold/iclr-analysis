{"title": "promising, but currently limited result", "review": "Summary:\nThe paper describes an algorithm for training a classifier to approximate homomorphisms from online trajectory data.  The mappings are then used to solve the resulting abstract deterministic shortest path problem.  A method is also proposed for encapsulating these abstract solutions into options and re-using them in the transfer setting.  Experiments in a puck stacking task and blocks world demonstrate the effectiveness of the new method.\n\nReview:\n\nThe empirical results of the paper are promising but I was discouraged by the restricted setting considered by the authors and the complete lack of theoretical guarantees, even with these restrictions.   \n\nThe introduction of the paper discusses sequential decision making in the realm of MDPs, but the problems tackled in the paper are far from general MDPs.  The environments are restricted to be deterministic and have one or more goal states, with all other states having equal reward.  This is much more like deterministic path planning, and that is ok to do theoretical work in, but no theory results are given in this paper.  In particular, no guarantees are given about the convergence of the algorithm \u2013 in fact the authors point out many cases where the algorithm over or under fits he classifier and fails at the underlying task.  A true analysis of the theoretical properties of this approach with a simple classifier in discrete state/action space seems needed, OR experiments showing it can actually succeed in non-deterministic domains.  Without one of these, the result seems incomplete.\n\nThe algorithm itself is also not very clearly explained.  In particular, the classifier seems to be trained to predict what state/action blocks will be encountered from the current state and a selected action?  But then there is wording saying that the classifier is \u201cpredicting all state/action blocks can be executed from a given state\u201d.  Does this mean you are \u201cpredicting *the outcome* of all state action/blocks that can be executed\u2026\u201d.  Predicting the outcome makes sense but I do not understand why you need to predict what blocks can be executed.  Overall, the description on page 3 and the difficult to define set notation in the pseudocode on page 4 are not clear enough to make the result reproducible.  There should be a more straightforward explanation or a 2-3 state example one can follow here.\n\nI also do not understand why the transfer result was not directly compared to Soni & Singh\u2019s work, referenced in the paper.  That work also builds a homomorphism and uses it in transfer learning yet not even a qualitative comparison of the approaches is really done.\n", "rating": "5: Marginally below acceptance threshold", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}