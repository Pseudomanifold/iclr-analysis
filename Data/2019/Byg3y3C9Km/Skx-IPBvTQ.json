{"title": "Interesting paper - not clear and mature enough ", "review": "The paper proposes a new end-to-end training framework for computational prediction of protein structure from sequence. \nThis is a very important problem and any progress due to new data and/or methods for utilizing may have high impact. \n\nThe paper presents several technical contributions in the modelling and training procedure - for example, automatic transformation between Cartesian and angular coordinates, using Langevin dynamics, and imputation method to get fine atomic coordinates. \n\nThe overall breadth and depth of the methods presented in the paper are impressive. The paper describes a quite complicated systems with multiple modules interacting between them. The paper doesn't describe the system built in enough details, although many of the details are given in the appendix.  \nFigure. 6 presents a scheme of the entire system, but it lacks details about the different modules, and it is not clear how they interact and how their training together is performed. \nThe pseudo-code boxes describing Algorithms 1-4, and Table 2 describing the representation are informative and helpful, and more descriptions of this type would help. \nFor example:    - In Algorithm 3, what do 'CartesianStep' and 'ClippedInternalStep' mean? where are they described? (should have their own boxes/description).  \n\t\t- I didn't see an Algorithm describing the atomic imputation part. \n\t\t- It would be good to add a high-level pseudo-code for the entire end-to-end training algorithm. In it there could be calls to Algorithms 1-4 when needed.  \n\nThere is also no single place where all the parameters used by the authors to achieve their empirical results are presented \n(e.g. learning rates, Gaussian kernel widths, how are random time steps for enforcing Lipschitz condition chosen etc.). \nIn addition, the empirical loss defined in eq. (8) is a sum of 6 different losses. It is not clear how are these very different losses scaled to the same 'units', which ones are more important, \nif and how are constants multiplying them chosen to give lower/higher weights to some of the losses etc. - I guess these choices will have a large effect on the training. \n\nThe authors present generalization results of their trained model in predicting 3D structures from CATH at different generalization level\n(i.e. different similarity levels to the training set proteins). It is not clear to me how good are these results, except that they are shown \nto be better than a baseline simple model. How well does the author's model compare to other recently suggested end-to-end models? \n(the authors mention AlQuraishi, Anand&Huang, papers). How do they compare to state-of-the art structure prediction programs? (e.g. CASP winners)? \nI realize giving an automatic end-to-end solution is interesting even if performance is below that of best programs, but still it would be good to know gaps.\nIf such comparisons are less meaningful/not practical to perform this should be argued convincingly. \nIt would also be useful to add some metrics of running time - it is not clear how computationally heavy and scalable is the author's model and training, compared to other methods. \n\n\nThere are many typos and inconsistent notations which makes it harder for the reader to understand the paper. \nFor example, 'Figure ??' in multiple locations, wrong Figure referenced, using s vs. S for sequence - S is defined as an L*20 matrix but in the appendix there are\n3 indices: s_{i,l,j} and it looks like different sequences in alignment should be denoted s_i. \nEquation for M_{l,j} isn't clear: j is used both as fixed index and index in summation. \nThe indexing in 'orientation vectors' v-hat_ij definition seems off (the formula of base vectors gives 0/0)\n\n\n\n", "rating": "6: Marginally above acceptance threshold", "confidence": "5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"}