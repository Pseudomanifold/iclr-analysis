{"title": "Interesting paper on using Lagrangian formulation to speed up learning of robot model", "review": "This paper discusses learning of robot dynamics models. They propose to learn the mass-matrix\nand the potential forces, which together describe the Lagrangian mechanics of the robot. The unknown\nterms are parametrized as a deep neural network, with some properties (such as positive definiteness)\nhard-coded in the network structure. The experimental results show the learned inverse model being used\nas the feed-forward term for controlling a physical robot. The results show that this approach lead to faster\nlearning, as long as the model accurately describes the system. The paper is well written and seems free\nof technical errors. The contribution is modest, but relevant, and could be a basis for further research. Below\nare a few points that could be improved:\n\n1) The paper uses the term partial differential equation in a non-standard way. While Eqs. 4/5 contain partial derivatives,\nthe unknown function is q, which is a function of time only. Therefore, the Lagrangian mechanics of robot arms are seen\nas ordinary differential equations. The current use of the PDE terms should be clarified, or removed.\n2) It is not made clear why the potential forces are learned directly, rather than as a derivative of the potential energy. Could you discuss the advantages/disadvantages? \n3) Somewhat related to the previous point: the paper presents learning of dissipative terms as a challenge for future works. Given that the formulation directly allows to add \\dot{q} as a variable in g, it seems like a trivial extension. Can you make clearer why this was not done in this paper (yet).\n4) The results on the physical robot arm state that the model cannot capture the cable dynamics, due to being a rigid body model. However, the formulation would allow modelling the cables as (non-linear) massless springs, which would probably\nexplain a large portion of the inaccuracies. I strongly suggest running additional experiments in which the actuator and joints have a separate position, and are connected by springs. If separate measurements of joint-position and actuator position are not available on the arm, it would still be interesting to perform the experiments in simulation, and compare the\nperformance on hardware with the analytical model that includes such springs.\n5) The choice is made to completely hardcode various properties of the mass matrix into the network structure. It would be possible to make some of these properties softcoded. For instance, the convective term C(q,\\dot{q})\\dot{q} could be learned separately, with the property  C + C^T = \\dot{H} encoded as a soft constraint. This would reduce the demand on computing derivatives online.", "rating": "7: Good paper, accept", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}