{"title": "A new parallel training architecture", "review": "This paper describes a new architecture for parallelizing off-policy reinforcement learning systems with a pool of independent learners trained on identical, but independent instances of the environment with a scheme for periodically synchronizing the the policy knowledge across the pool. The paper provides demonstrations in several continuous control domains.\n\nI think this paper should be rejected because: 1) the approach is not well justified or placed within the large literature on parallel training architectures and population-based training methods, (2) the results are competitive with the best in each domain, but there are many missing details. Since the contribution is entirely support by empirical evidence, these issues need to be clarified. I look forward to the author response, as I will pose several questions below and my final score will carefully take the answers into account.\n\nJustification of decision. There are numerous papers on parallel architectures for training deep RL systems [1,2, 6] and you cited a few, and while not all of them focus on continuous control there are design decisions and insights in those works must be relevant to your efforts. You should make those connections clear in the paper. One line of the paper is not nearly enough. The stated focus of the paper is exploration-exploitation yet there is little to no discussion of other ideas including noisy networks, intrinsic motivation, or count-based exploration methods. The paper is missing a lot of key connections to the literature.\n\nI am certainly not a fan of architectures that assume access to many instances of the environment. In this case that assumption seems worse because of the target application: continuous control domains. These domains are simulations of physical control systems; on a robot the agent receives only one stream of experience and thus these architectures would not work well. Though there is some work on applying these multi-environment architectures to farms of robot arms; the reality of the real-world is that the arms end up being very different due to wear and tear, and engineers must constantly fix the hardware because these multi-environment architectures do not work when the environments are different. We cannot loose sight of the goal here\u2014maximizing these simulation environments is not of interest itself, its a stepping stone\u2014architectures that only work on simulations that afford multiple identical environments but fail in the real world have very limited application. I think this paper needs to motivate why parallel training in this way in these robotics inspired domains is interesting and worthwhile.    \n\nThe main area of concern with this paper is the experiment section. There are several issues/questions I would like the authors to address:\n1) You built on top of TD3, however you just used the parameter settings of TD3 as published and didn\u2019t tune them. This is a problem because it could just be that the existing parameter choices for TD3 were just better for the new approach. You have to take additional effort in this case to ensure your method is actually better than just using TD3. Additional parameter tuning of TD3 is required here.\n2) I think its an odd choice for TD3 to have an infinite buffer, as recent work has show at least for DQN that large buffers can hurt performance [7].  Can you justify this choice beyond \u201cthe authors of TD3 did it that way\u201d?\n3) Why is R_eval different for each method?\n4) Why did you not compare to TD3 on the same set of domains as used in the TD3 paper? Why a subset? Why these particular domains?\n5) In 2 of the 4 domains the proposed method ties or is worse than the baselines. In half-cheetah it looks close to significant, and in the ant domain the result is unlikely to be significant because the error-bars overlap and the error-bars of TD3 are wider than the other methods so a simple visual inspection is not enough. There does not seem to be a strong case for the new method here. I may be misunderstanding the results. Help me see the significance. \n6) The paper claims improvement in variance, but this requires additional analysis in the form of an F-test of better.\n7) Why these baselines (e.g., SAC) and not others? Why did you not include D4PG [6]? Soft Q-learning? A population-based training method [3,4,5,8] to name a few?\n\n[1] GPU-Accelerated Robotic Simulation for Distributed Reinforcement Learning\n[2] IMPALA: Scalable Distributed Deep-RL with Importance Weighted Actor-Learner Architectures\n[3] Human-level performance in first-person multiplayer games with population-based deep reinforcement learning\n[4] Improving Exploration in Evolution Strategies for Deep Reinforcement Learning via a Population of Novelty-Seeking Agents\n[5] Structured Evolution with Compact Architectures for Scalable Policy Optimization\n[6] Distributed Distributional Deterministic Policy Gradients\n[7] A Deeper Look at Experience Replay\n[8] Evolution Strategies as a Scalable Alternative to Reinforcement Learning\n \n\nSmall things that did not impact the score:\n1) references to \u201csearch interval\u201d in the abstract are confusing because the reader has not read the paper yet\n2) Description of the method in abstract is too specific\n3) P1 intro, not a topic sentence for what follows\n4) \u201cperforms an action to its environment\u201d >> grammar\n5) \u201cOne way to parallel learning\u2026\u201d >> grammar\n6) \u201cthat the value parameter and\u201d >> grammar\n7) \u201cpitfalls\u201d >> minima \n8) Did you try combining you method with other base off-policy methods? how did it work?\n9) GAE undefined?\n10) \u201camong the baseline and\u201d>>grammar\u2026there are many grammar errors", "rating": "4: Ok but not good enough - rejection", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}