{"title": "Some nice pieces and ideas but have concerns about methodology and shallow analysis", "review": "This paper tries to quantify how \"dense\" representations we need for a specific task -- more specifically, how many dimensions are needed from a given representation (for a given task) to achieve a percentage of the performance of the entire representation. The second thing the paper tries to quantify is how well representations learned for one task can be fine tuned for another. Experiments are conducted with 4 different representation technique on a dozen or so tasks.\n\nQuick summary: While I liked aspects of this -- including the motivation of having a lightweight way of understanding how well representations transfer across tasks, overall my concerns surrounding the methodology and some missing analysis leads me to believe this needs more work before it is ready for publication.\n\nQuality: Below average\nI believe the proposed techniques have some flaws which hurt the eventual method. There are also concerns about the motivations behind parts of the technique.\n\nClarity: Fair\nThere were some experimental details that were poorly explained but in general the paper was readable.\n\nOriginality: Fair\nThere were some nice ideas in the work but I remain concerned about aspects of it.\n\nSignificance: Below average\nMy concern is that the flaws in the method do not make it conducive to use as is.\n\n\nStrengths / Things I liked:\n\n+ I really liked the motivating problem of being able to (hopefully cheaply / efficiently) estimate transfer potential to understand how well representations will perform on a different task.\n\n+ Multiple representations and tasks experimented with\n\nWeaknesses / Things that concerned me:\n(In no specific order)\n\n- (W1) Adversely affected by rotations: One of my big concerns with the work is the way the CFS is computed. While it seems ok to estimate these different metrics using only linear models, my concern with this is that the linear models are only given a subset of the **exact** dimensions of the original representations. This is very much unlike the learning objectives of most of these representation learning methods and hence is highly biased and dependent on the actual methods and the random seeds used and the rotations it performs. (In many cases the representations are used starting with a fully connected layer bottom layer on top of the representations and hence rotations of the representations do not affect performance)\n\nLet's take an example: Say there is a single dimension of the representation that is a perfect predictor of a task. Suppose we rotated these representations. Now the signal from the original dimension is split across multiple dimensions and hence the CFS may be deceivingly high.\n\nTo me this is a big concern as different runs of the same representation technique can likely have very different CFS scores based on initializations and random seeds.\n\n- (W2) Related to the last line: I did not see any experiments / analysis showing how stable these different numbers are across different runs of the representation technique. Nor did I see any error bars in the experiments. This again greatly concerned me as I am not certain how stable these metrics are.\n\n- (W3) Baselines for transfer learning: I felt this was another notable oversight. I would have liked to see results for both trivial baselines like random ranking as well as more informed baselines where we can estimate transfer potential using say k representation techniques, and then use that to help us understand how well it would do on the other representations. This latter baseline is a zero-cost baseline as it is not even dependent on the method.\n\n- (W4) Metrics for ranking of transfer don't make sense (and some are missing) : I also don't understand how \"precision\" and NDCG are used as metrics. Based on my understanding the authors rank (which itself is questionable) the different tasks in order of potential for transfer and then call this the \"gold\" set. How is precision and NDCG calculated from this?\n\nMore importantly I don't believe looking at rank alone is sufficient since that completely obscures the actual performance numbers obtained via transfer. In most cases I would care about how well my model would perform on transfer not just which tasks I should transfer from. I would have wanted to understand something like the correlation of these produced scores with the actual ground truth performance numbers.\n\n- (W5) Multi-task learning: I did not see any mention or experiments of what can be expected when the representations are themselves trained on multiple tasks. (This seems like something that could easily be done in the empirical analysis as well and would provide richer empirical signals as well)\n\n- (W6) Motivation for CFS: I still don't fully understand the need to understand the density of the representation (especially in the manner proposed in the paper). Why is this an important problem? Perhaps expanding on this would be helpful\n\n- (W7) Alternatives to CFS / Computational concerns: A big concern I had was the computational expense of the proposed approach. Unfortunately I did not see any discussion about this in the paper or empirically.\n\nI find this striking because I can easily come up with cheaper alternatives to get at this \"density\". For example using LASSO / LARS like methods you can perhaps figure out a good reduced dimension set more efficiently.\n\nIf I were to go through the computation of then why not just train a smaller version of that representation technique instead and **directly** see how well it can encode data in k dimensions via that technique / for that task?\n\nAlternatively why not try using a factorization technique to reduce the rank and then see how well the method does for different ranks?\n\n- (W7b) Likewise I wonder if we could just measure transfer more directly as well and why we need to go via these CFS sets\n\n- (W8) The proposed  CLF weight difference method has some concerning aspects as well. For example say we had two task with exact opposite labels. They would have a very low weight difference score though they are ideal representations for each other. Likewise looking at a difference of weight vectors seems arbitrary in other ways as well.\n", "rating": "4: Ok but not good enough - rejection", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}