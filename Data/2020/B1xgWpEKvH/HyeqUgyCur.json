{"rating": "3: Weak Reject", "experience_assessment": "I do not know much about this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.", "title": "Official Blind Review #3", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review": "This paper presents a method for adaptively selecting the positive samples in triplet loss. Based on the assumption that the norm of the gradient of the loss correlates with the informativeness of each sample, the authors theoretically motivate and propose a method to adaptively select the positive examples. On an evaluation on two datasets, the authors show some mild improvements over the HardNet baseline.\n\nOverall, the suggested method seems reasonable, but the evaluation seems weak.\n\n* The reported results are far from beating the baseline with a \"significant margin\" as the authors claim.\n\n* It's unclear if the results are reported over multiple runs or a single run. Since this isn't reported, a single run is insufficient to suggest how this method actually works. For example, what is the variance among different trainings?\n\n* Arguably, the demonstration of this method in two datasets is somewhat weak too. Adding more datasets can strengthen this work.\n\n* The authors argue in Appendix E that AdaSample converges faster. However, this is computed in terms of number of epochs not computation time. How does this method compare in terms of computation time? AdaSample adds some additional computational complexity over HardNet.\n\n* One could imagine that the negative samples of the triplet loss can also be sampled in a similar way. Instead the authors opt for the \"hardest-in-batch\" negatives. Why is such a decision made? Does AdaSample _not_ work for negative samples?\n\nOverall, I find this work interesting and I would like to see it eventually published. However, at this moment, it is unclear to me (and to any reader, I assume) if the additional complexity introduced by this method actually yields performance improvements.\n"}