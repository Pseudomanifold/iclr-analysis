{"rating": "1: Reject", "experience_assessment": "I do not know much about this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review_assessment:_checking_correctness_of_experiments": "I did not assess the experiments.", "title": "Official Blind Review #3", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review": "This work presents a method for upper bounding prediction errors of neural networks for perception tasks. The method assumes that the input (and the corresponding output) to the neural network is generated conditioned on one of the many world states. The method proposes to compute ground-truth output intervals for each of the states. Next the method proposes to compute bounding boxes for input regions of the states. Given the input regions and a trained model, the method proposes to estimate output ranges of the network for the states. The method then combines ground-truth output intervals with network output ranges to compute the error bounds. The authors consider two toy problems for empirical analysis.\n\nThe paper is clearly written and easy to follow; however I find the it hard to see how the method can be applied in a realistic scenario. For instance the method assumes the states of the world to be a priori known. Moreover, input and output generation processes g(.) and lambda(.) respectively are taken to be accessible. Since in general we can't expect to have access to data generation processes, I am not sure how the ground-truth output intervals or even input range bounding boxes can be computed. Also, with or without having access to g()/input bounding boxes, how reliably can we estimate the output range of a model (neural network) given that it may be unbounded? I am also not sure why just the output limits are sufficient to compute error bounds. Shouldn't it be based on prediction error? \n\n\nIt would be nice if the authors could also clarify why there method is only specific to neural networks. They should also demonstrate applications of their proposed approach to real benchmarks. "}