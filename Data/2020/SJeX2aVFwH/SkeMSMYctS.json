{"experience_assessment": "I do not know much about this area.", "rating": "6: Weak Accept", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "review_assessment:_thoroughness_in_paper_reading": "I made a quick assessment of this paper.", "title": "Official Blind Review #3", "review": "This paper proposes a new method for solving the metric constrained problem based on projections on cutting planes. Its main contribution comes from the \"forgetting\" part, where unnecessary constraints (that are inactive) are removed in order to keep the number of constraints manageable. \n\nPros: \n\nThe methods seem practically useful as verified in the experiments. \n\nCons: \n\nMost importantly, the paper is out of format and there exist some critical typos that need to be fixed. \n- The margin of the paper is wider than the official ICLR format. It needs to be reformatted and verified to be under 10 pages limit. \n- There seem to be multiple Latex bugs on referring the section numbers, e.g., \"see appendix refsec:genealProblem\" at bottom of page 5. \n\nThere is no theoretical guarantee on its improvement over existing methods, i.e., the forgotten constraints can reappear during optimization for multiple numbers of times. However, I think this point is not crucial given the empirical usefulness of the algorithm.\n\nMinor questions: \n- To my knowledge, cutting plane methods for the integer programming method (including Gurobi) already use an instance \"project and forget\" method, i.e., iteratively solving linear programs and then adding & removing cutting planes. See [1] for an example. Could the authors discuss the relationship between the two methods and highlight the relative difference & contribution?\n\n[1] The cutting plane method is polynomial for perfect matchings, Chandrasekaran et al., 2012\n\n========= \n\nI have checked that the authors have re-formatted the paper into a correct form. I raise my score since I think the paper is interesting and provides a practically useful algorithm.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I did not assess the derivations or theory."}