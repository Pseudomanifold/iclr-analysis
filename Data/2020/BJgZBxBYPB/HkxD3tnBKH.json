{"rating": "3: Weak Reject", "experience_assessment": "I have read many papers in this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I carefully checked the derivations and theory.", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "title": "Official Blind Review #1", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review": "This paper presents a method for predicting the trajectories of objects in video (or phone) games by learning the physical parameters underlying the movements. To do so, the authors used some multi-layer perceptrons on the (x,y) trajectory in order to i) estimate the physical values of the equation (equation supposed to be known, here a parabolic trajectory); and then ii) predict the trajectories from new initial conditions.\n\nGeneral comment:\nWhile the links between physics and machine learning is clearly interesting and trendy, I found the paper unclear, not well motivated and I think the work is not enough for a paper in ICLR. Yet, I think the authors did spend some time and this work might be suited for a workshop.\n\nPositive aspects:\n- the authors really tried to focus on games that are used today.\n- the results are showing that they do learn the parameters they wanted, as the new trajectories are indeed working.\n\nRemarks and questions:\n- the writing of the paper is not enough to make it clear, and a lot of sentences are not readable. Starting at the second sentence of the abstract. Try to make small sentences, and add all the pronouns 'a', 'the', .... Avoid the too numerous 'and' and cut the sentences.\n- What is a shooting mechanism? Is it something scientifically defined? otherwise, explain better: the parabolic trajectory is I guess more explanatory of what you are doing.\n- What is the goal of your work? Estimating the parameters of an equation used in a game is not really interesting.. as we have to know the equation, it has to be simple, we have to extract the trajectory from the game... but there might be other related applications that could motivate this work.\n- Related work: I don't really see the novelty of your work. You are saying that the physical properties have to be learned from experience, but you are actually relying on a known equation, and just tuning the 3 parameters. Do games always follow the physical laws? From my knowledge, some games change the physical laws in order to be more pretty, ect. in that case, your method will not work?\n- More generally, can you explain the difference for you between physical laws and physical properties?\n- Explain what is 'MLP'; how many layers, what size, how did you defined it, ect.\n- in 3.1.1. you are spending quite a long time in explaining what an autoencoder is; I think you can go faster on this.\n- Why the RelateNet has 2 distinct MLPs while InferNet uses the same for inferring V0 and Theta?\n- How did you extract the trajectories, ect. from the games?\n- Figure 6: How come in the two last images, we see different starting points?\n- Table 1: can we have an idea of the errors in meters? and compared to the distance of the trajectory? \n\nSmall remarks:\n- theta is not alpha. Please use a common notation.\n- Figure 5, 6.. : the legends are clearly not visible. they might not be useful, but in this case you have to spend time in changing the tick labels so that we can read them.\n- 'build a relationships': no 's'\n... a lot of  grammatical/ sentence problems\n\n"}