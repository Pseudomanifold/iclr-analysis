{"rating": "1: Reject", "experience_assessment": "I do not know much about this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "N/A", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "title": "Official Blind Review #1", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review": "This paper introduces adversarial domain adaptation to software vulnerability detection with separate feature extractors for each domain and two discriminators. The authors also claim to keep the manifold of both domain by adding a manifold regularization term. The experiments on real-world software projects show that the proposed method sets up a new state-of-the-art for the security community.\n\npros:\n+ It is pleasing to see deep learning can benefit the security community. However, it seems this is not a pioneer work. The data processing in 2.2 is not a contribution, but borrowed from [1]\n\ncons:\n- It seems the dual discriminators are not necessary. Given a D_S (source discriminator), it seems (1 - G_S) is an optimal target discriminator. There is no need for another D_T discriminator. However, the authors claim that the dual-component architecture solves the mode collapse problem, which is by no means reasonable. The proposed method just adds a redundant discriminator.\n\n- The loss for manifold regularization is not convincing, either. An trivial solution to minimize the Eq. 4 is to make all the representation vectors the same, leading to zero loss. However, this is not desired for manifold regularization.\n\n- Poor presentation: Figure 3 is not self-contained (cannot tell what the left plot represents from the caption or subtitle), not vector diagram. What's worse, the left figure even covers the text (\"problem\"). Only colors are distinguishable. The 0s and 1s in the same color are too small to distinguish.\n\n- It is too long a paper, with 10 pages of content. Please refer to the Submission Instructions of https://iclr.cc/Conferences/2020/CallForPapers :\"Reviewers will be instructed to apply a higher standard to papers in excess of 8 pages.\"\n\n[1] Deep Domain Adaptation for Vulnerable Code Function Identification, Nguyen et. al, IJCNN 2019."}