{"experience_assessment": "I have published in this field for several years.", "rating": "3: Weak Reject", "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "title": "Official Blind Review #4", "review": "This paper introduces an approach to compute the saliency map of a 3D point cloud, where the saliency is motivated from removing a region could result in a decrease in performance in shape classification. This idea was introduced in the image domain, and prior works leverage the so-called the natural neighborhood of image grids. However, such approaches do not naturally extend to 3D shapes, which are irregular, and particularly the 3D point cloud representation, which does not have well-defined connectivity information.  The basic idea of this approach is to apply variants Laplacian smoothing, which seeks to deform a shape to a sphere or a plane. This representation seeks to represent a pre-computed levelsets of masks, where each masked point is given by a linear combination of the corresponding points along this filtration (i.e., the weights of the combination depend on the mask value).\n\nAlthough the proposed approach has a good motivation. It exhibits several technical issues.\n1)\tFor images, when one sets the value of the mask to be zero, the corresponding pixel is 0. However, in the 3D representation, the \u2018zero\u2019 pixel is a point on a sphere, which does not vanish. It is unclear existing networks treat such regions the same way as convolution neural networks treat masked image regions.\n2)\tThe smoothing operator can be quite unstable. A small region on the original shape could correspond a large region on the resulting sphere. The densities of the smoothed point cloud could change drastically (which is not an issue for images). Such issues appear quite often for spherical parameterizations of triangular meshes. They can get worse on point clouds. It would also be good to quantitively evaluate the performance of the resulting smoothed point clouds.\n3)\tThe paper contains several adhoc parameters, such as 10 shapes for interpolation, switching spheres between planes (How to make such decisions for input point clouds that are like a half sphere?) \n4)\tAnother relevant question is how robust the proposed approach against a bad smoothing result is. Do the visualization results change?\n\nIn summary, although the motivation is good, the proposed approach is not convincing. The experimental results do not justify the robustness of the smoothing operator. \n", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory."}