{"experience_assessment": "I do not know much about this area.", "rating": "6: Weak Accept", "review_assessment:_thoroughness_in_paper_reading": "N/A", "review_assessment:_checking_correctness_of_experiments": "N/A", "title": "Official Blind Review #3", "review_assessment:_checking_correctness_of_derivations_and_theory": "N/A", "review": "Traditional convolution neural networks are not aware of object\u2019s geometric variations (i.e. rotation), while human being are very good at abstracting out such variation. \nIn this paper, the authors propose an approach known as DKs (deformation kernels) to overcome such issues. The high level picture is make the convolutional filter data dependable. For convnets, the filter is independent of the data. To make it data dependent (potentially able to detect the objects geometric information), DKs first initialize a larger filter (say 9 * 9) that is universal to all inputs and then `subsampling` a smaller filter (say 3 *3), the `subsampling` strategy is input dependent and also learnable (similar to attention mechanism.) \n\nI do not have much background in this field, but I found the ideas of DKs very interesting and novel (assuming this is the first work to make the filter data dependent and learnable.)  I lean to a weakly accept. \n\nMinor Comments: \n1. Below equation (1). Z  -> Z^2; above (1) : j \\in R^2  -> Z^2   \n2. above (5) as a composition --> as a sum ?? \n3. can you elaborate on 'In practice, we use the bilinear sampling operator to interpolate within the discrete kernel grid.' In particular, how the `smalle`r kernel is learned/subsampled from the larger kernel? (i.e. how \\Delta k is learned?) \n\nMore interesting experiments? \n1. Compare performance of the two methods below:   \n a. standard architectures using data deformation (translation, rotation, dilation)\n b. DKs without applying data deformation. \n2. Figure 4.  Could you produce plots similar to the setting of figure 1., i.e. rotate / dilate the images. Showing that DKs could effectively capture such deformation.  \n\n"}