{"experience_assessment": "I have published one or two papers in this area.", "rating": "3: Weak Reject", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "title": "Official Blind Review #1", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review": "This paper presents Policy Tree Network, a novel approach to use an implicit dynamics model to perform decision-time planning in continuous action spaces. The experiments show that the proposed method performs better than the underlying model-free RL algorithm in standard MuJoCo environments. \n\nThe writing quality is low and I don't understand the proposed method, especially the backed-up Q-value. The notation is also confusing. It seems to me that pi(a|s) is the density of action a, so what does sqrt(value * density) mean? What if the value is negative? \n\nBesides, I have some questions.\n1. Figure 1 looks the same as Figure 1 in https://arxiv.org/pdf/1909.07373.pdf, but I don't find any reference in the paper. Could you please state the difference between two figures, or explain why you want to put this figure here without any description or reference? \n2. How is PTN compared to model-based RL algorithms? The only baseline here is PPO, which is model-free. More importantly, note that the policy in PPO is stochastic, so how is PTN compared to the deterministic policy? \n3. How is the proposed pi-Q-backup method compared to classical control method, e.g. MPC? Does the proposed planning algorithm work for model-free algorithms? \n4. As this paper talks about planning with implicit dynamics models, how is the proposed method compared with explicit dynamics models? \n\nMinor comments:\n1. In Algorithm 1 Line 11, could you please check the brackets? \n2. Page 4, \"Thus, cumulative density function (cdf) of pi_F is given by ...\": Could you please check the correctness of the equation? \n3. What does \"worst-case\" in Theorem 1 mean? \n4. How is correlation in Table 2 calculated? \n5. In Algorithm 1, is the return value a scalar or a vector? \n6. The paper states that \"Intuitively, the branching factor b can be thought of as interpolating how much confidence we have in pi and Q0\". One can have infinite b but sample a uniformly to optimize Q (and then pi_F becomes maxQ policy), so I don't think b can be simply characterized as the confidence. \n"}