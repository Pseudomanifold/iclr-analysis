{"rating": "6: Weak Accept", "experience_assessment": "I have read many papers in this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review_assessment:_checking_correctness_of_experiments": "N/A", "title": "Official Blind Review #6", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review": "Summary\n-------\n\nThe authors investigate (subclasses of) generalized counter machines with respect to their weak generative capacity, their ability to represent structure, and several closure properties. This is motivated by recent indications that LSTMs have comparable expressivity to counter machines, so that the formal properties of these machines might provide indirect insights into the linguistic suitability of LSTMs.\n\n\nEvaluation\n----------\n\nI also reviewed this paper for SCiL a few months ago.\nWhile I had major reservations back then, I am happy to provide a more positive evaluation this time as the authors have done some revisions that clear up many points of confusion.\nI have to add two caveats, though.\nFirst, I am a bit disheartened that the authors chose not to adopt many of the excellent changes suggested by another SCiL reviewer (who went way beyond the call of duty with their multi-page review).\nSecond, I did not have sufficient time to check all proofs for their correctness.\nIn many cases the strategies strike me as intuitively sound, but my intuition tends to miss edge cases.\nNonetheless, I think that this paper, albeit a bit of a gamble, would make for an interesting addition to the program.\n\n\n1) Weakness: Link to neural networks still unclear\n\nThe central weakness of the paper is still the link between neural networks and counter automata.\nBased on what is said in the paper, this is merely a conjecture at this point, not a well-established fact. \nWithout this link, the value of the paper is unclear.\nIf, however, this conjecture should turn out to be true, the paper would mark a very strong starting point for further exploration.\nThis makes it a gamble worth taking.\n\n\n2) Strong results, but lack of examples\n\nThe results are not trivial and provide deep insights into the inner workings of counter machines.\nIn particular the fact that counter machines cannot correctly represent Boolean expressions reveals key limitations on their representational power.\nThe semilinearity result is less impressive because of how limited the machines are that it applies to, and I'm not sure that the proof provides a good basis for generalization to more complex machines.\nThe authors might consider removing this part to clear some space for examples, which are sorely needed.\nThe formalism is abstract and unfamiliar to most readers, and a few concrete examples would greatly strengthen the readers' intuition.\n\n\n3) No investigation of linguistically important string languages\n\nAs the authors make claims about linguistic adequacy, it is surprising that there is no discussion of TALs, MCFLs or PMCLFs.\nThe grammar formalism of GPSG was abandoned because it was limited to context-free languages and could not handle those more complex language classes.\nSo if counter machines fail here, the issue of their linguistic adequacy is already decided without further probing semilinearity or representational power.\nAs far as I can tell, real-time counter machines cannot generate the PMCLF a^{2^n}, which is an abstract model of unbounded copying constructions in natural language (see Radzisnky on Chinese number names, Michaelis & Kracht on Old Georgian case stacking, and Kobele on Yoruba).\nNor is it obvious to me that counter machines can handle the copy language {ww | w \\in \\Sigma^*}, a model of crossing dependencies, although they can handle a^n b^n c^n (a TAL).\nIt should also be possible to generate the linguistically undesirable MIX language, which is a 2-MCFL but not a TAL.\n\n\nMinor comments\n--------------\n\n- As noted in my SCiL review, your definitions still differ from those of Fischer et al. 1968. What is the reason for this?\n\n- Theorem 3.1: \\subsetneq would be clearer than \\subset\n\n- p4, typo: the the\n\n- Proof of Theorem 3.2: Unless I misunderstand your modulo construction, your ICL only has resolution up to mod n. For instance, with mod 2 it can distinguish 2 from 3, but not 2 from 4. The CL can do that. Don't you need a second counter c_i' for each c_i, then, to keep track of how often you have wrapped around modulo n in c_i? That would still be incremental as you can never wrap around by more than 1 in any given update.\n\n- Sec 6.1: in all those definitions, if should be iff\n\n\nReferences\n----------\n\n@ARTICLE{Radzinski91,\n  author = {Radzinski, Daniel},\n  title = {Chinese Number Names, Tree Adjoining Languages, and Mild Context\n\tSensitivity},\n  year = {1991},\n  journal = {Computational Linguistics},\n  volume = {17},\n  pages = {277--300},\n  url = {http://ucrel.lancs.ac.uk/acl/J/J91/J91-3002.pdf}\n}\n\n@INPROCEEDINGS{MichaelisKracht97,\n  author = {Michaelis, Jens and Kracht, Marcus},\n  title = {Semilinearity as a Syntactic Invariant},\n  year = {1997},\n  booktitle = {Logical Aspects of Computational Linguistics},\n  pages = {329--345},\n  editor = {Retor{\\'e}, Christian},\n  volume = {1328},\n  series = {Lecture Notes in Artifical Intelligence},\n  publisher = {Springer},\n  doi = {10.1007/BFb0052165},\n  url = {http://dx.doi.org/10.1007/BFb0052165}\n}\n\n@PHDTHESIS{Kobele06,\n  author = {Kobele, Gregory M.},\n  title = {Generating Copies: {A}n Investigation into Structural Identity in\n\tLanguage and Grammar},\n  year = {2006},\n  school = {UCLA},\n  url = {http://home.uchicago.edu/~gkobele/files/Kobele06GeneratingCopies.pdf}\n}"}