{"rating": "3: Weak Reject", "experience_assessment": "I have read many papers in this area.", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review_assessment:_checking_correctness_of_experiments": "I assessed the sensibility of the experiments.", "title": "Official Blind Review #3", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review": "This paper presents a rotation-equivariant model for use with point-clouds.  Capsule networks with activation and rotation pose estimate in the form of a quaternion are applied to local patches of 3D points, and combined up through progressively more coarser receptive fields.  Rotation equivariance is obtained by looking for agreement between input point frames (or capsules), by iteratively clustering using the quaternion mean.  The method is evaluated on ModelNet40, obtaining much improved results in the case where rotation orientation is arbitrary.\n\nUnfortunately, I found too many important parts of the method difficult to understand, enumerated below, and am also not very clear on the details of how they fit together.  At a high level, the approach of aggregating pose agreement with quaternion averages makes intuitive sense, the quaternion average step itself is described well, and the experimental results seem to corroborate this (results on NR/AR condition are very good, and also near identical to NR/NR condition, a major verification of the method).  However, the rest of the pieces of the method still leave me guessing too much.\n\n*  It isn't clear what computes the activations alpha.  I don't see a description for how to compute activations alpha that are the input to Alg. 1, unless these are simply the activations of the previous layer's capsules, and constant for the initial point frames?\n\n*  Likewise, the transform t() could use more description.  Sec 3.2 says it is R3->R4, indicating that the input to t() is a single point.  Does this mean that the mere presence of a point in a location R3 (relative to a mostly-canonicalized pose) counts as a vote for a rotation pose?  And if so, how does does this work?  Or does the regressor actually take multiple points as input?  According to the picture in Fig. 1, it looks like it takes all points in the local patch as input.\n\n*  Algorithm 1 outer for loop for i doesn't seem quite right.  It suggests that the body is performed either independently or in sequence for each i.  I believe what may actually be intended, is that all i are used at once in parallel, so that the v_ij votes assignment is found for *all* i in order to use in finding the cluster mean for each j.  That is, \"v_i,j = Q_i * t_i,j for all i\", rather than having the outermost loop over i.  Is this correct?\n\n*  Much space is dedicated to background explanations of quaternions, geodescic distance, etc.  Given my difficulty in understanding much of the system, it seems like some of could be shortened or put into the appendix, and more of the main text devoted to more detailed explanations of each component in the system (e.g. alpha and t), and how the capsule agreement step (QE DR) makes use of these.\n\n\nAlso, some more detailed comments/suggestions:\n\n* Alg.1:  output alpha^hat_K, seems K should be M here?\n* Table 1:  \"Right hand side denotes symmetric objects\" seems it actually shoudl be in the caption for Table 2.\n"}