{"experience_assessment": "I have published in this field for several years.", "rating": "3: Weak Reject", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.", "title": "Official Blind Review #4", "review_assessment:_checking_correctness_of_derivations_and_theory": "I assessed the sensibility of the derivations and theory.", "review": "This paper proposes a new framework, named Neural Stochastic Differential Equation (Neural SDE), for regularizing and stabilizing Neural Ordinary Differential Equation (Neural ODE).  For this reason authors consider SDE by adding stochastic term to ODE. They propose three alternatives for stochastic term and provide experimental comparison between all of them and pure Neural ODE. Results of these experiments demonstrate that Neural SDE outperforms Neural ODE. \n\nOverall, proposed concept is quite reasonable but supplied experiments have methodological issues. Therefore, I suppose this work is not a sufficient contribution to neural continuous models and could be rejected.\n\n1. There are several controversial questions, which do not allow me to put a higher score:\nThe information provided to set up the experiment is not enough to reproduce. Learning rate, optimizer, batch size and other parameters are missing. I have conducted experiments for CIFAR10 dataset for baseline Neural ODE model using authors\u2019 network architecture, standard data augmentation and those parameters - optimizer: sgd, learning rate: 0.1, momentum: 0.9, batch size: 128, integration method: euler, amount of steps: 10, with learning rate decay by 10 times on 60, 100, 140 epoch. With this parameters I am able to achieve 85.40% accuracy, while best result for Neural SDE model is 84.55%. Given this, it is very difficult to draw any conclusions about the effectiveness of Neural SDE.\n2. Supplied experiments are various and shows that Neural SDE achieves better test accuracy and is more robust to adversarial and non-adversarial perturbations to the input. Nevertheless, all of the experiments are conducted with relatively small models, which achieve low test quality. One cannot guarantee that obtained results will remain the same for large models. Therefore, judgement about significance of these results gets clouded. Moreover, I suppose this issue to be important because authors state their model as a way to regularize Neural ODE. That means, that the initial model has to be large enough to be able to overfit. \n3. The main advantage of Neural ODE is memory efficiency of the training procedure, which is achieved by adjoint method. Authors suggest their framework as regularizing technique to Neural ODE, but they conduct experiments without adjoint method. Therefore, it is hard to make any conclusions about advantages of proposed model in comparison with others. In order to demonstrate that Neural SDE saves memory efficiency feature authors should conduct experiments with Neural SDE with adjoint if this is possible. \n\nFor making this paper better I would suggest to conduct experiments with stronger baseline networks. Currently accuracies for baseline networks are very low. Also I would like to make some notes which can help to clarify text of the paper:\nIn the end of the second paragraph of introduction authors say that regularization methods are not applicable to Neural ODE, since Neural ODE is deterministic system. But ordinary neural networks are also deterministic, so this idea is not clear. \nIn the part  3.3 ROBUSTNESS OF NEURAL SDE authors say that assumption on function f and G quite natural and is enforced in the original Neural ODE paper. As I could find there is no first assumption about at most linearity in original paper. Maybe authors can add some additional argumentation about this assumption. \nExperiment in section 4.1 demonstrates that Neural SDE achieves better test accuracy than Neural ODE. Given this, authors state that noise injection acts like a regularization and therefore Neural SDE achieves better generalization performance. However, it would be more obvious for readers if train accuracies were also provided.\nPage 6, Definition 3.1 B: it is not clear with respect to which parameter supremum is taken.\nIn the main body of the paper there are a lot of references to formula 25 (from appendix), but almost the same formula 3 is in the main text.\nQuestions for authors:\nDo you have some intuition why Dropout without TTN works worse than ODE for TinyImageNet in experiment session 4.2?\nAnd why different methods work differently for different datasets in experiment session 4.3?\nWhat is the size of ensemble for TTN results?\nDo you search noise parameter by the best validation or test accuracy?\n"}