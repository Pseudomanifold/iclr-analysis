{"title": "A good work on modularisation of probabilistic programming languages", "review": "The paper presents an extension of the MXFusion language that allows the use of probabilistic modules. These modules are defined as a set of random variables and a specific probabilistic distribution. The modules also contain dedicated inference methods. Using these modules, one can use probabilistic distributions with inference methods tailored to the distribution, which are usually more efficient than generic inference systems.\nThe paper presents several examples using Gaussian process models, evaluated by comparison with GPy and the standard spare gaussian process method implemented in MXFusion.\n\nOverall, the paper is well written and clear, and all claims are justified. The idea of modularization is not really new (as other systems implement something similar) but this approach tries to be general, in order not to pose constraints on the specification of modules. The related work section provides a good positioning of the approach.\nI have not found any specific problems in the paper, the quality is rather high. However, the actual content of the paper describes an extension of an existing system. Such an extension is certainly important, but the paper does not provide much more information.\nMoreover, the results of the experimental test do not seem to me to be able to support the main objective of the extension, which is to give the possibility to exploit more specific probabilistic model and inference methods to achieve better results than an approach using general methods.\nAs far as the execution of the system is concerned, is this extension able to improve the scalability or reduce the walltime? Is this visible in the presented test (at least in terms of speed up)? Or is the convenience of this approach the simpler way to define distributions?\n\nAs for minor issues that I can point out, one concerns the definition of shape in the Variable of m.sigma2 (figures 1, 2, 3). I do not know the used in MXFusion, thus this might not be an error, but it seems that in the shape definition something is missing. It is written that shape=(1,), is it correct or is there an error? In case of absence of error, what does the empty argument mean?\n\nThe power benchmark is not described.\n\nIn references, Thomas V. Wiecki is mentioned with and without the first letter of middle name. I suggest to uniform the references.\n\nTypos:\n- Abstract: \"... but also sophisticated probabilistic model*s* such as ...\"\n- Sec. 1, first row of page 2: The sentence \"this would bring the a lot of benefits ...\". The \"the\" word should be deleted.\n- Sec. 1 refers to a section after 4 which does not exist in the paper.\n- Page 5: remove the full stop before the colon in the 4th row.\n- Page 5: \"The log_pdf method of the SGPR module compute*s* the above variational lower bound\"\n- Sec. 6: the sentence \"MXFusion aims at closing the gap between having specialized, highly performant algorithms and generic, easily maintained generic algorithms by introducing probabilistic modules.\" should be corrected.\n\n\nPros\n- The extension allows the use of modules that define specific probabilistic distribution/inference methods\n- It seems easy to extend the system with other modules\n- Its a really useful extension...\n\nCons\n- The performance presented in the paper is not entirely convincing\n- ... but it is just an extension of an existing system", "rating": "5: Marginally below acceptance threshold", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}